{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\inventory management system\\\\frontend\\\\src\\\\components\\\\Reporting\\\\Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, TextField, Button, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [reportData, setReportData] = useState(null);\n  const handleGenerateReport = async () => {\n    try {\n      const response = await axios.get('http://localhost:9001/api/reports', {\n        params: {\n          start_date: startDate,\n          end_date: endDate\n        }\n      });\n      setReportData(response.data);\n    } catch (error) {\n      console.error('Error generating report', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Generate Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Start Date\",\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"End Date\",\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value),\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleGenerateReport,\n          fullWidth: true,\n          style: {\n            marginTop: '16px'\n          },\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), reportData && /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Report Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(reportData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"QiC/8sdXQh5FRFicFpfxklsJPcw=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","TextField","Button","Grid","jsxDEV","_jsxDEV","Reports","_s","startDate","setStartDate","endDate","setEndDate","reportData","setReportData","handleGenerateReport","response","get","params","start_date","end_date","data","error","console","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","label","type","value","onChange","e","target","InputLabelProps","shrink","fullWidth","color","onClick","style","marginTop","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/inventory management system/frontend/src/components/Reporting/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Typography, TextField, Button, Grid } from '@mui/material';\r\n\r\nconst Reports = () => {\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  const handleGenerateReport = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:9001/api/reports', {\r\n        params: { start_date: startDate, end_date: endDate },\r\n      });\r\n      setReportData(response.data);\r\n    } catch (error) {\r\n      console.error('Error generating report', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\">Generate Reports</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            label=\"Start Date\"\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            label=\"End Date\"\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleGenerateReport}\r\n            fullWidth\r\n            style={{ marginTop: '16px' }}\r\n          >\r\n            Generate\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {reportData && (\r\n        <Container style={{ marginTop: '20px' }}>\r\n          <Typography variant=\"h5\">Report Data</Typography>\r\n          <pre>{JSON.stringify(reportData, null, 2)}</pre>\r\n        </Container>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}