{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\inventory management system\\\\frontend\\\\src\\\\components\\\\SupplierManagement\\\\SupplierForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupplierForm = ({\n  supplierId,\n  onSupplierUpdated\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [contactInfo, setContactInfo] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  useEffect(() => {\n    if (supplierId) {\n      setIsEditMode(true);\n      // Fetch supplier details if we are in edit mode\n      axios.get(`http://localhost:9001/api/suppliers/${supplierId}`).then(response => {\n        const supplier = response.data;\n        setName(supplier.name);\n        setContactInfo(supplier.contact_info);\n      }).catch(error => {\n        console.error('Error fetching supplier:', error);\n      });\n    }\n  }, [supplierId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const supplierData = {\n      name,\n      contact_info: contactInfo\n    };\n    try {\n      if (isEditMode) {\n        await axios.put(`http://localhost:9001/api/suppliers/updateSupplier?id=${supplierId}`, supplierData);\n      } else {\n        await axios.post('http://localhost:9001/api/suppliers/createSupplier', supplierData);\n      }\n      onSupplierUpdated(); // Notify parent component to refresh supplier list\n      setName('');\n      setContactInfo('');\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: isEditMode ? 'Update Supplier' : 'Create Supplier'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Supplier Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        fullWidth: true,\n        required: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Contact Information\",\n        value: contactInfo,\n        onChange: e => setContactInfo(e.target.value),\n        fullWidth: true,\n        required: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: isEditMode ? 'Update Supplier' : 'Create Supplier'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SupplierForm, \"JIVi89ApoHIgB0iIU/TBYScChWk=\");\n_c = SupplierForm;\nexport default SupplierForm;\nvar _c;\n$RefreshReg$(_c, \"SupplierForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Container","Typography","axios","jsxDEV","_jsxDEV","SupplierForm","supplierId","onSupplierUpdated","_s","name","setName","contactInfo","setContactInfo","isEditMode","setIsEditMode","get","then","response","supplier","data","contact_info","catch","error","console","handleSubmit","e","preventDefault","supplierData","put","post","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","target","fullWidth","required","margin","type","color","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/inventory management system/frontend/src/components/SupplierManagement/SupplierForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Container, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst SupplierForm = ({ supplierId, onSupplierUpdated }) => {\r\n  const [name, setName] = useState('');\r\n  const [contactInfo, setContactInfo] = useState('');\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (supplierId) {\r\n      setIsEditMode(true);\r\n      // Fetch supplier details if we are in edit mode\r\n      axios.get(`http://localhost:9001/api/suppliers/${supplierId}`)\r\n        .then(response => {\r\n          const supplier = response.data;\r\n          setName(supplier.name);\r\n          setContactInfo(supplier.contact_info);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching supplier:', error);\r\n        });\r\n    }\r\n  }, [supplierId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const supplierData = { name, contact_info: contactInfo };\r\n    try {\r\n      if (isEditMode) {\r\n        await axios.put(`http://localhost:9001/api/suppliers/updateSupplier?id=${supplierId}`, supplierData);\r\n      } else {\r\n        await axios.post('http://localhost:9001/api/suppliers/createSupplier', supplierData);\r\n      }\r\n      onSupplierUpdated(); // Notify parent component to refresh supplier list\r\n      setName('');\r\n      setContactInfo('');\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h5\">{isEditMode ? 'Update Supplier' : 'Create Supplier'}</Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Supplier Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          fullWidth\r\n          required\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Contact Information\"\r\n          value={contactInfo}\r\n          onChange={(e) => setContactInfo(e.target.value)}\r\n          fullWidth\r\n          required\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          {isEditMode ? 'Update Supplier' : 'Create Supplier'}\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SupplierForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}