{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\inventory management system\\\\frontend\\\\src\\\\pages\\\\SuppliersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SupplierForm from '../components/SupplierManagement/SupplierForm';\nimport SupplierList from '../components/SupplierManagement/SupplierList';\nimport { Container, Grid } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuppliersPage = () => {\n  _s();\n  const [suppliers, setSuppliers] = useState([]);\n  const [editSupplierId, setEditSupplierId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Fetch suppliers on page load\n  useEffect(() => {\n    fetchSuppliers();\n  }, []);\n  const fetchSuppliers = async () => {\n    setIsLoading(true);\n    try {\n      const token = localStorage.getItem('authToken'); // Retrieve token from localStorage\n\n      const response = await axios.get('http://localhost:9001/api/suppliers', {\n        headers: {\n          Authorization: `Bearer ${token}` // Add Bearer token to the request headers\n        }\n      });\n      setSuppliers(response.data); // Adjust if API returns supplier array directly\n    } catch (error) {\n      console.error('Error fetching suppliers:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSupplierUpdated = () => {\n    setEditSupplierId(null); // Reset edit mode\n    fetchSuppliers(); // Refresh the supplier list after create/update\n  };\n  const handleEditSupplier = supplierId => {\n    setEditSupplierId(supplierId); // Set supplierId for editing\n  };\n  const handleSupplierDeleted = async supplierId => {\n    try {\n      const token = localStorage.getItem('authToken'); // Retrieve token from localStorage\n      await axios.delete(`http://localhost:9001/api/suppliers/${supplierId}`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Add Bearer token to the request headers\n        }\n      });\n      fetchSuppliers(); // Refresh the supplier list after delete\n    } catch (error) {\n      console.error('Error deleting supplier:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SupplierForm, {\n          supplierId: editSupplierId,\n          onSupplierUpdated: handleSupplierUpdated,\n          setSuppliers: setSuppliers // Ensure suppliers are updated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading suppliers...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(SupplierList, {\n          suppliers: suppliers,\n          onEditSupplier: handleEditSupplier,\n          onSupplierDeleted: handleSupplierDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(SuppliersPage, \"IP/F/EDwesBJxDTUnsYKAcNzaQw=\");\n_c = SuppliersPage;\nexport default SuppliersPage;\nvar _c;\n$RefreshReg$(_c, \"SuppliersPage\");","map":{"version":3,"names":["React","useState","useEffect","SupplierForm","SupplierList","Container","Grid","axios","jsxDEV","_jsxDEV","SuppliersPage","_s","suppliers","setSuppliers","editSupplierId","setEditSupplierId","isLoading","setIsLoading","fetchSuppliers","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleSupplierUpdated","handleEditSupplier","supplierId","handleSupplierDeleted","delete","children","container","spacing","item","xs","md","onSupplierUpdated","fileName","_jsxFileName","lineNumber","columnNumber","onEditSupplier","onSupplierDeleted","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/inventory management system/frontend/src/pages/SuppliersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SupplierForm from '../components/SupplierManagement/SupplierForm';\r\nimport SupplierList from '../components/SupplierManagement/SupplierList';\r\nimport { Container, Grid } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst SuppliersPage = () => {\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [editSupplierId, setEditSupplierId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Fetch suppliers on page load\r\n  useEffect(() => {\r\n    fetchSuppliers();\r\n  }, []);\r\n\r\n  const fetchSuppliers = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('authToken'); // Retrieve token from localStorage\r\n\r\n      const response = await axios.get('http://localhost:9001/api/suppliers', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Add Bearer token to the request headers\r\n        },\r\n      });\r\n\r\n      setSuppliers(response.data); // Adjust if API returns supplier array directly\r\n    } catch (error) {\r\n      console.error('Error fetching suppliers:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSupplierUpdated = () => {\r\n    setEditSupplierId(null); // Reset edit mode\r\n    fetchSuppliers(); // Refresh the supplier list after create/update\r\n  };\r\n\r\n  const handleEditSupplier = (supplierId) => {\r\n    setEditSupplierId(supplierId); // Set supplierId for editing\r\n  };\r\n\r\n  const handleSupplierDeleted = async (supplierId) => {\r\n    try {\r\n      const token = localStorage.getItem('authToken'); // Retrieve token from localStorage\r\n      await axios.delete(`http://localhost:9001/api/suppliers/${supplierId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Add Bearer token to the request headers\r\n        },\r\n      });\r\n      fetchSuppliers(); // Refresh the supplier list after delete\r\n    } catch (error) {\r\n      console.error('Error deleting supplier:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <SupplierForm\r\n            supplierId={editSupplierId}\r\n            onSupplierUpdated={handleSupplierUpdated}\r\n            setSuppliers={setSuppliers} // Ensure suppliers are updated\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          {isLoading ? (\r\n            <p>Loading suppliers...</p>\r\n          ) : (\r\n            <SupplierList\r\n              suppliers={suppliers}\r\n              onEditSupplier={handleEditSupplier}\r\n              onSupplierDeleted={handleSupplierDeleted}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SuppliersPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}