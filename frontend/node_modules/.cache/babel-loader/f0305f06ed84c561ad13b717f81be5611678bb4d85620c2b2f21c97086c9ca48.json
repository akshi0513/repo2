{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\inventory management system\\\\frontend\\\\src\\\\components\\\\SupplierManagement\\\\SupplierForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Container, Typography, MenuItem, Select, InputLabel, FormControl, Checkbox, ListItemText } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupplierForm = ({\n  setSuppliers\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [contactInfo, setContactInfo] = useState('');\n  const [products, setProducts] = useState([]); // List of all available products from backend\n  const [selectedProducts, setSelectedProducts] = useState([]); // Selected products by the user\n\n  // Fetch available products from the backend on component mount\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:9001/api/products'); // Assuming you have this endpoint to get products\n        setProducts(response.data); // Assuming the response contains an array of products\n      } catch (error) {\n        console.error('Error fetching products', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('authToken'); // Retrieve the token from localStorage\n\n      const response = await axios.post('http://localhost:9001/api/suppliers', {\n        name,\n        contact_info: contactInfo,\n        products: selectedProducts // Sending selected products\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Add the token to the Authorization header\n        }\n      });\n      setSuppliers(prev => [...prev, response.data]);\n      setName('');\n      setContactInfo('');\n      setSelectedProducts([]); // Clear the selected products after submission\n    } catch (error) {\n      console.error('Error adding supplier', error);\n    }\n  };\n  const handleProductChange = event => {\n    setSelectedProducts(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Add Supplier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Contact Information\",\n        value: contactInfo,\n        onChange: e => setContactInfo(e.target.value),\n        required: true,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"products-label\",\n          children: \"Products Supplied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"products-label\",\n          multiple: true,\n          value: selectedProducts,\n          onChange: handleProductChange,\n          renderValue: selected => selected.join(', '),\n          children: products.map(product => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: product._id,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: selectedProducts.indexOf(product._id) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Add Supplier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(SupplierForm, \"4AJC9Ye0BwzomHa94CB5iRk4Bjg=\");\n_c = SupplierForm;\nexport default SupplierForm;\nvar _c;\n$RefreshReg$(_c, \"SupplierForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Container","Typography","MenuItem","Select","InputLabel","FormControl","Checkbox","ListItemText","axios","jsxDEV","_jsxDEV","SupplierForm","setSuppliers","_s","name","setName","contactInfo","setContactInfo","products","setProducts","selectedProducts","setSelectedProducts","fetchProducts","response","get","data","error","console","handleSubmit","e","preventDefault","token","localStorage","getItem","post","contact_info","headers","Authorization","prev","handleProductChange","event","target","value","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","onChange","required","fullWidth","margin","id","labelId","multiple","renderValue","selected","join","map","product","_id","checked","indexOf","primary","type","color","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/inventory management system/frontend/src/components/SupplierManagement/SupplierForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Container, Typography, MenuItem, Select, InputLabel, FormControl, Checkbox, ListItemText } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst SupplierForm = ({ setSuppliers }) => {\r\n  const [name, setName] = useState('');\r\n  const [contactInfo, setContactInfo] = useState('');\r\n  const [products, setProducts] = useState([]); // List of all available products from backend\r\n  const [selectedProducts, setSelectedProducts] = useState([]); // Selected products by the user\r\n\r\n  // Fetch available products from the backend on component mount\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:9001/api/products'); // Assuming you have this endpoint to get products\r\n        setProducts(response.data); // Assuming the response contains an array of products\r\n      } catch (error) {\r\n        console.error('Error fetching products', error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('authToken'); // Retrieve the token from localStorage\r\n\r\n      const response = await axios.post(\r\n        'http://localhost:9001/api/suppliers',\r\n        {\r\n          name,\r\n          contact_info: contactInfo,\r\n          products: selectedProducts, // Sending selected products\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}` // Add the token to the Authorization header\r\n          }\r\n        }\r\n      );\r\n\r\n      setSuppliers(prev => [...prev, response.data]);\r\n      setName('');\r\n      setContactInfo('');\r\n      setSelectedProducts([]); // Clear the selected products after submission\r\n    } catch (error) {\r\n      console.error('Error adding supplier', error);\r\n    }\r\n  };\r\n\r\n  const handleProductChange = (event) => {\r\n    setSelectedProducts(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\">Add Supplier</Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Contact Information\"\r\n          value={contactInfo}\r\n          onChange={(e) => setContactInfo(e.target.value)}\r\n          required\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        \r\n        {/* Multi-select dropdown for products */}\r\n        <FormControl fullWidth margin=\"normal\">\r\n          <InputLabel id=\"products-label\">Products Supplied</InputLabel>\r\n          <Select\r\n            labelId=\"products-label\"\r\n            multiple\r\n            value={selectedProducts}\r\n            onChange={handleProductChange}\r\n            renderValue={(selected) => selected.join(', ')}\r\n          >\r\n            {products.map((product) => (\r\n              <MenuItem key={product._id} value={product._id}>\r\n                <Checkbox checked={selectedProducts.indexOf(product._id) > -1} />\r\n                <ListItemText primary={product.name} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Add Supplier</Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SupplierForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}